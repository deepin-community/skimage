From: Ole Streicher <olebole@debian.org>
Date: Wed, 16 Dec 2020 11:26:58 +0100
Subject: Skip tests that need the python3-pooch package and internet
 connection

python3-pooch is not available yet (RFS #968470)
---
 skimage/data/tests/test_data.py                          | 16 ++++++++++++++++
 skimage/filters/rank/tests/test_rank.py                  |  3 +--
 skimage/measure/tests/test_blur_effect.py                |  2 ++
 skimage/morphology/tests/test_gray.py                    |  4 ++++
 .../tests/test_masked_phase_cross_correlation.py         |  1 +
 .../registration/tests/test_phase_cross_correlation.py   |  1 +
 skimage/restoration/tests/test_restoration.py            |  1 +
 skimage/restoration/tests/test_rolling_ball.py           |  1 +
 8 files changed, 27 insertions(+), 2 deletions(-)

diff --git a/skimage/data/tests/test_data.py b/skimage/data/tests/test_data.py
index c193c49..19b1125 100644
--- a/skimage/data/tests/test_data.py
+++ b/skimage/data/tests/test_data.py
@@ -9,6 +9,15 @@ import os
 import pytest
 
 
+@pytest.mark.skip(reason="test fails without pooch")
+def test_data_dir():
+    # data_dir should be a directory people can use as a standard directory
+    # https://github.com/scikit-image/scikit-image/pull/3945#issuecomment-498141893
+    data_dir = data.data_dir
+    assert 'astronaut.png' in os.listdir(data_dir)
+
+
+@pytest.mark.skip(reason="requires data downloaded from internet")
 def test_download_all_with_pooch():
     # jni first wrote this test with the intention of
     # fully deleting the files in the data_dir,
@@ -64,6 +73,7 @@ def test_coffee():
     data.coffee()
 
 
+@pytest.mark.skip(reason="requires data downloaded from internet")
 def test_eagle():
     """Test that "eagle" image can be loaded."""
     # Fetching the data through the testing module will
@@ -139,6 +149,7 @@ def test_lfw_subset():
     data.lfw_subset()
 
 
+@pytest.mark.skip(reason="Needs python3-pooch and internet connection")
 def test_skin():
     """Test that "skin" image can be loaded.
 
@@ -153,6 +164,7 @@ def test_cell():
     data.cell()
 
 
+@pytest.mark.skip(reason="requires data downloaded from internet")
 def test_cells3d():
     """Needs internet connection."""
     path = fetch('data/cells3d.tif')
@@ -160,6 +172,7 @@ def test_cells3d():
     assert image.shape == (60, 2, 256, 256)
 
 
+@pytest.mark.skip(reason="requires data downloaded from internet")
 def test_brain_3d():
     """Needs internet connection."""
     path = fetch('data/brain.tiff')
@@ -167,6 +180,7 @@ def test_brain_3d():
     assert image.shape == (10, 256, 256)
 
 
+@pytest.mark.skip(reason="requires data downloaded from internet")
 @pytest.mark.xfail(
     Version(np.__version__) >= Version('2.0.0.dev0'),
     reason='tifffile uses deprecated attribute `ndarray.newbyteorder`',
@@ -181,6 +195,7 @@ def test_kidney_3d_multichannel():
     assert kidney.shape == (16, 512, 512, 3)
 
 
+@pytest.mark.skip(reason="requires data downloaded from internet")
 @pytest.mark.xfail(
     Version(np.__version__) >= Version('2.0.0.dev0'),
     reason='tifffile uses deprecated attribute `ndarray.newbyteorder`',
@@ -195,6 +210,7 @@ def test_lily_multichannel():
     assert lily.shape == (922, 922, 4)
 
 
+@pytest.mark.skip(reason="requires data downloaded from internet")
 def test_vortex():
     fetch('data/pivchallenge-B-B001_1.tif')
     fetch('data/pivchallenge-B-B001_2.tif')
diff --git a/skimage/filters/rank/tests/test_rank.py b/skimage/filters/rank/tests/test_rank.py
index 2f82c8b..5758bbd 100644
--- a/skimage/filters/rank/tests/test_rank.py
+++ b/skimage/filters/rank/tests/test_rank.py
@@ -58,7 +58,6 @@ def test_subtract_mean_underflow_correction(dtype):
 # Note: Explicitly read all values into a dict. Otherwise, stochastic test
 #       failures related to I/O can occur during parallel test cases.
 ref_data = dict(np.load(fetch("data/rank_filter_tests.npz")))
-ref_data_3d = dict(np.load(fetch('data/rank_filters_tests_3d.npz')))
 
 
 @pytest.mark.parametrize(
@@ -104,7 +103,6 @@ class TestRank:
         self.footprint = morphology.disk(1)
         self.footprint_3d = morphology.ball(1)
         self.refs = ref_data
-        self.refs_3d = ref_data_3d
 
     @pytest.mark.parametrize('outdt', [None, np.float32, np.float64])
     @pytest.mark.parametrize('filter', all_rank_filters)
@@ -158,6 +156,7 @@ class TestRank:
 
     @pytest.mark.parametrize('outdt', [None, np.float32, np.float64])
     @pytest.mark.parametrize('filter', _3d_rank_filters)
+    @pytest.mark.skip(reason="requires data downloaded from internet")
     def test_rank_filters_3D(self, filter, outdt):
         @run_in_parallel(warnings_matching=['Possible precision loss'])
         def check():
diff --git a/skimage/measure/tests/test_blur_effect.py b/skimage/measure/tests/test_blur_effect.py
index a81d0b7..c4aa0c4 100644
--- a/skimage/measure/tests/test_blur_effect.py
+++ b/skimage/measure/tests/test_blur_effect.py
@@ -1,3 +1,4 @@
+import pytest
 from numpy.testing import assert_array_equal
 
 from skimage.color import rgb2gray
@@ -42,6 +43,7 @@ def test_blur_effect_channel_axis():
     assert_array_equal(B0_arr, B1_arr)
 
 
+@pytest.mark.skip(reason="Needs python3-pooch and internet connection")
 def test_blur_effect_3d():
     """Test that the blur metric works on a 3D image."""
     image_3d = cells3d()[:, 1, :, :]  # grab just the nuclei
diff --git a/skimage/morphology/tests/test_gray.py b/skimage/morphology/tests/test_gray.py
index 95faec4..3666d91 100644
--- a/skimage/morphology/tests/test_gray.py
+++ b/skimage/morphology/tests/test_gray.py
@@ -64,6 +64,8 @@ class TestMorphology:
 
         return output
 
+    
+    @pytest.mark.skip(reason="requires data downloaded from internet")
     def test_gray_morphology(self):
         expected = dict(np.load(fetch('data/gray_morph_output.npz')))
         calculated = self._build_expected_output()
@@ -463,6 +465,7 @@ def test_octagon_decomposition(cam_image, function, m, n, decomposition):
         assert_array_equal(expected, out)
 
 
+@pytest.mark.skip(reason="requires data downloaded from internet")
 @pytest.mark.parametrize(
     "function",
     ["erosion", "dilation", "closing", "opening", "white_tophat", "black_tophat"],
@@ -482,6 +485,7 @@ def test_cube_decomposition(cell3d_image, function, size, decomposition):
     assert_array_equal(expected, out)
 
 
+@pytest.mark.skip(reason="requires data downloaded from internet")
 @pytest.mark.parametrize(
     "function",
     ["erosion", "dilation", "closing", "opening", "white_tophat", "black_tophat"],
diff --git a/skimage/registration/tests/test_masked_phase_cross_correlation.py b/skimage/registration/tests/test_masked_phase_cross_correlation.py
index 8e0fb79..37f174d 100644
--- a/skimage/registration/tests/test_masked_phase_cross_correlation.py
+++ b/skimage/registration/tests/test_masked_phase_cross_correlation.py
@@ -59,6 +59,7 @@ def test_masked_registration_random_masks():
     assert_equal(measured_shift, -np.array(shift))
 
 
+@pytest.mark.skip(reason="Needs python3-pooch and internet connection")
 def test_masked_registration_3d_contiguous_mask():
     """masked_register_translation should be able to register translations
     between volumes with contiguous masks."""
diff --git a/skimage/registration/tests/test_phase_cross_correlation.py b/skimage/registration/tests/test_phase_cross_correlation.py
index a43f14f..4f2181e 100644
--- a/skimage/registration/tests/test_phase_cross_correlation.py
+++ b/skimage/registration/tests/test_phase_cross_correlation.py
@@ -177,6 +177,7 @@ def test_mismatch_offsets_size():
         _upsampled_dft(np.ones((4, 4)), 3, axis_offsets=[3, 2, 1, 4])
 
 
+@pytest.mark.skip(reason="requires data downloaded from internet")
 @pytest.mark.parametrize(
     ('shift0', 'shift1'),
     itertools.product((100, -100, 350, -350), (100, -100, 350, -350)),
diff --git a/skimage/restoration/tests/test_restoration.py b/skimage/restoration/tests/test_restoration.py
index 6b7de49..ef71891 100644
--- a/skimage/restoration/tests/test_restoration.py
+++ b/skimage/restoration/tests/test_restoration.py
@@ -164,6 +164,7 @@ def test_richardson_lucy(ndim):
 
 @pytest.mark.parametrize('dtype_image', [np.float16, np.float32, np.float64])
 @pytest.mark.parametrize('dtype_psf', [np.float32, np.float64])
+@pytest.mark.skip(reason="requires data downloaded from internet")
 def test_richardson_lucy_filtered(dtype_image, dtype_psf):
     if dtype_image == np.float64:
         atol = 1e-8
diff --git a/skimage/restoration/tests/test_rolling_ball.py b/skimage/restoration/tests/test_rolling_ball.py
index 42f4e57..58a2b1f 100644
--- a/skimage/restoration/tests/test_rolling_ball.py
+++ b/skimage/restoration/tests/test_rolling_ball.py
@@ -90,6 +90,7 @@ def test_threads(num_threads):
     rolling_ball(img, radius=10, nansafe=True, num_threads=num_threads)
 
 
+@pytest.mark.skip(reason="Needs python3-pooch and internet connection")
 def test_ndim():
     image = data.cells3d()[:5, 1, ...]
     kernel = ellipsoid_kernel((3, 100, 100), 100)
